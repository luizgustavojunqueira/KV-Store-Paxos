syntax = "proto3";

package kvstore;

option go_package = "github.com/luizgustavojunqueira/KV-Store-Paxos/kvstore";

import "paxos/paxos.proto";

service KVStore{
rpc Get(GetRequest) returns (GetResponse);
rpc Set(SetRequest) returns (SetResponse);
rpc Delete(DeleteRequest) returns (DeleteResponse);
rpc List(ListRequest) returns (ListResponse);
rpc ListLog(ListRequest) returns (ListLogResponse);
rpc TryElectSelf(TryElectRequest) returns (TryElectResponse);
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  string value = 1;
  bool found = 2;
  string error_message = 3;
}

message SetRequest {
  string key = 1;
  string value = 2;
}

message SetResponse {
  bool success = 1;
  string error_message = 2;
}

message DeleteRequest {
  string key = 1;
}

message DeleteResponse {
  bool success = 1;
  string error_message = 2;
}

message ListRequest{}

message ListResponse {
  repeated KeyValuePair pairs = 1;
  string error_message = 3; // Mensagem de erro, se houver
}



message KeyValuePair {
  string key = 1;
  string value = 2;
}

message ListLogResponse {
  repeated LogEntry entries = 1;
  string errorMessage = 2;
}


message LogEntry {
  int64 slot_id = 1;
  Command command = 2; // Comando associado ao log
}

message Command{
  paxos.CommandType type = 1; // tipo do comando
  string key = 2; // chave do valor a ser manipulado
  string value = 3; // valor a ser manipulado, se aplicável
  int64 proposal_id = 4; // número da proposta associada ao comando
}

message TryElectRequest {
}

message TryElectResponse {
  bool success = 1; // Indica se a eleição foi bem-sucedida
  string error_message = 2; // Mensagem de erro, se houver
}

