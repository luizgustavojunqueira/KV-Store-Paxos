syntax = "proto3";
package paxos;

option go_package = "github.com/luizgustavojunqueira/KV-Store-Paxos/paxos";

service Paxos{
  rpc Prepare(PrepareRequest) returns (PrepareResponse);
  rpc Accept(AcceptRequest) returns (AcceptResponse);
  rpc ProposeLeader(ProposeLeaderRequest) returns (ProposeLeaderResponse);
  rpc SendHeartbeat(LeaderHeartbeat) returns (LeaderHeartbeatResponse);
}

enum CommandType{
  UNKNOWN = 0; // comando desconhecido
  SET = 1; // comando para definir um valor
  DELETE = 2; // comando para deletar um valor
}

message Command{
  CommandType type = 1; // tipo do comando
  string key = 2; // chave do valor a ser manipulado
  bytes value = 3; // valor a ser manipulado, se aplicável
}

message PrepareRequest {
  int64 proposal_id = 1; // número da proposta
  int64 slot_id = 2; // número do slot da proposta
}

message PrepareResponse {
  bool success = 1;          
  string error_message = 2; // mensagem de erro, se houver
  int64 accepted_proposal_id = 3; // número da proposta aceita
  Command accepted_command = 4; // comando aceito, se houver
  int64 current_proposal_id = 5; // número da proposta atual
}

message AcceptRequest {
  int64 proposal_id = 1; // número da proposta
  int64 slot_id = 2; // número do slot da proposta
  Command command = 3; // comando a ser aceito
}

message AcceptResponse {
  bool success = 1; // indica se a aceitação foi bem-sucedida
  int64 current_proposal_id = 2; // número da proposta aceita
  string error_message = 3; // mensagem de erro, se houver
}


message ProposeLeaderRequest{
  int64 proposal_id = 1; // Número da proposta para a eleição do líder
  string candidate_address = 2; // Endereço do candidato a líder
}

message ProposeLeaderResponse{
  bool success = 1;
  string error_message = 2; // Mensagem de erro, se houver
  int64 current_highest_leader_proposal_id = 3; // Número da proposta do líder atual
  string current_leader_address = 4; // Endereço do líder atual
  int64 highest_decided_slot_id = 5; // Slot mais alto decidido até o momento
}

message LeaderHeartbeat{
  string leader_address = 1; // Endereço do líder
  int64 current_proposal_id = 2; // Número da proposta atual do líder
  int64 highest_decided_slot_id = 3; // Slot mais alto decidido até o momento
}

message LeaderHeartbeatResponse{
  bool success = 1; // Indica se o heartbeat foi bem-sucedido
  string error_message = 2; // Mensagem de erro, se houver
  int64 known_highest_slot_id = 3; // Slot mais alto que o Acceptor/Learner conhece
}
